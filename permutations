//Given a collection of distinct integers, return all possible permutations.

class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> result;
        if (nums.empty()) {
            vector<int> temp;
            result.push_back(temp);
            return result;
        }
        else if (nums.size() == 1) {
            vector<int> temp = {nums[0]};
            result.push_back(temp);
            return result;
        }
        vector<int> cpy = nums;
        for (int i = 0; i < nums.size(); i++) {
            cpy.erase(cpy.begin() + i);
            vector<vector<int>> left = permute(cpy);
            for (int j = 0; j < left.size(); j++) {
                left[j].insert(left[j].begin(), nums[i]);
                result.push_back(left[j]);
            }
            cpy = nums;
        }
        return result;
    }
};
